-- üì¶ ModuleScript: NPCAIModule
-- ‡∏ß‡∏≤‡∏á‡πÉ‡∏ô: ServerScriptService > NPCAIModule
-- ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà: ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° AI ‡∏Ç‡∏≠‡∏á NPC (‡πÑ‡∏•‡πà‡∏•‡πà‡∏≤/‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô)

local NPCAIModule = {}

-- ‡πÇ‡∏´‡∏•‡∏î Module ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
local PathfindingModule = require(script.Parent.PathfindingModule)
local PlayerDetectionModule = require(script.Parent.PlayerDetectionModule)

-- ‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
local DETECT_DISTANCE = 50  -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
local ATTACK_DISTANCE = 5   -- ‡∏£‡∏∞‡∏¢‡∏∞‡πÇ‡∏à‡∏°‡∏ï‡∏µ
local CHASE_UPDATE_RATE = 0.1  -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Path ‡∏ó‡∏∏‡∏Å 0.3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô)

-- üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á AI Loop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö NPC ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß
function NPCAIModule.createAI(npc, patrolPoints)
	local humanoid = npc:WaitForChild("Humanoid")
	local hrp = npc:WaitForChild("HumanoidRootPart")
	
	-- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ PrimaryPart
	if not npc.PrimaryPart then
		npc.PrimaryPart = hrp
	end
	
	-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° state
	local isChasing = false
	
	-- ‡πÄ‡∏£‡∏¥‡πà‡∏° AI Loop ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
	task.spawn(function()
		local patrolIndex = 1
		
		while npc.Parent and humanoid.Health > 0 do
			-- üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
			local targetPlayer = PlayerDetectionModule.findNearestPlayer(npc, DETECT_DISTANCE)
			
			if targetPlayer and targetPlayer.Character then
				-- üèÉ ‡πÇ‡∏´‡∏°‡∏î‡πÑ‡∏•‡πà‡∏•‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
				isChasing = true
				print("üéØ " .. npc.Name .. " ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏•‡πà " .. targetPlayer.Name)
				
				local chaseStartTime = tick()
				local maxChaseTime = 30  -- ‡πÑ‡∏•‡πà‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
				
				while targetPlayer 
					and targetPlayer.Character 
					and targetPlayer.Character:FindFirstChild("HumanoidRootPart") 
					and npc.Parent 
					and humanoid.Health > 0
					and (tick() - chaseStartTime) < maxChaseTime do
					
					local playerHrp = targetPlayer.Character.HumanoidRootPart
					local distance = (playerHrp.Position - hrp.Position).Magnitude
					
					-- ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏Å‡∏•‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏•‡πà
					if distance > DETECT_DISTANCE * 1.5 then
						print("‚ùå " .. npc.Name .. " ‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏•‡πà (‡πÑ‡∏Å‡∏•‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ)")
						break
					end
					
					-- ‡∏ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏û‡∏≠ ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÄ‡∏•‡∏¢
					if distance <= ATTACK_DISTANCE then
						PlayerDetectionModule.attackPlayer(targetPlayer)
						print("üíÄ " .. npc.Name .. " ‡πÇ‡∏à‡∏°‡∏ï‡∏µ " .. targetPlayer.Name)
						task.wait(2)  -- ‡∏£‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà
						break
					end
					
					-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Path ‡πÑ‡∏õ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
					local path = PathfindingModule.createPath(npc, playerHrp.Position)
					
					if path then
						-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡∏≤‡∏° Path ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏∂‡∏á
						local waypoints = path:GetWaypoints()
						
						for i, wp in ipairs(waypoints) do
							-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
							if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
								break
							end
							
							local currentDistance = (targetPlayer.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
							
							-- ‡∏ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏û‡∏≠‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÇ‡∏à‡∏°‡∏ï‡∏µ
							if currentDistance <= ATTACK_DISTANCE then
								PlayerDetectionModule.attackPlayer(targetPlayer)
								print("üíÄ " .. npc.Name .. " ‡πÇ‡∏à‡∏°‡∏ï‡∏µ " .. targetPlayer.Name)
								break
							end
							
							-- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏Å‡∏•‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏ô
							if currentDistance > DETECT_DISTANCE * 1.5 then
								break
							end
							
							if wp.Action == Enum.PathWaypointAction.Jump then
								humanoid:MoveTo(wp.Position)
								humanoid.Jump = true
							else
								humanoid:MoveTo(wp.Position)
							end
							
							-- ‡∏£‡∏≠‡πÅ‡∏Ñ‡πà‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ñ‡∏∂‡∏á waypoint
							local timeout = 2
							local moveStart = tick()
							while (tick() - moveStart) < timeout do
								if (hrp.Position - wp.Position).Magnitude < 5 then
									break
								end
								task.wait(0.1)
							end
							
							-- ‡∏ó‡∏∏‡∏Å 2-3 waypoints ‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡πÉ‡∏´‡∏°‡πà
							if i % 2 == 0 then
								break  -- ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å loop ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡πÉ‡∏´‡∏°‡πà
							end
						end
					else
						-- ‡∏ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡πÑ‡∏õ
						humanoid:MoveTo(playerHrp.Position)
						task.wait(0.5)
					end
					
					task.wait(CHASE_UPDATE_RATE)
					
					-- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
					targetPlayer = PlayerDetectionModule.findNearestPlayer(npc, DETECT_DISTANCE)
				end
				
				isChasing = false
				print("üõë " .. npc.Name .. " ‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏•‡πà")
				
			else
				-- üö∂ ‡πÇ‡∏´‡∏°‡∏î‡∏•‡∏≤‡∏î‡∏ï‡∏£‡∏∞‡πÄ‡∏ß‡∏ô (Patrol)
				if #patrolPoints > 0 then
					local point = patrolPoints[patrolIndex]
					
					if point then
						-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏∏‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
						if (hrp.Position - point).Magnitude > 5 then
							local path = PathfindingModule.createPath(npc, point)
							
							if path then
								PathfindingModule.moveAlongPath(npc, path)
							else
								-- ‡∏ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÄ‡∏î‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡πÑ‡∏õ
								humanoid:MoveTo(point)
								task.wait(2)
							end
						end
						
						-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏à‡∏∏‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
						patrolIndex = patrolIndex % #patrolPoints + 1
					end
				end
				
				task.wait(1)  -- ‡∏£‡∏≠‡∏ô‡∏≤‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î patrol
			end
		end
		
		print("üõë AI Loop ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö " .. npc.Name .. " ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
	end)
end

return NPCAIModule