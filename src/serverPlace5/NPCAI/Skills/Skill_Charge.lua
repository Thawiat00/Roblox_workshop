-- ========================================
-- üìÑ Skill_Charge.lua
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á target ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ npc ‡∏û‡∏∏‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏à‡∏∏‡∏î‡∏ô‡∏±‡πâ‡∏ô
-- ========================================

local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local SkillConfig = require(game.ServerScriptService.ServerLocal.Config.SkillConfig)


local EventBus = require(game.ServerScriptService.ServerLocal.Core.EventBus)


local PhysicsService = game:GetService("PhysicsService")


-- ===============================
-- 3Ô∏è‚É£ Skill_Charge Function
-- ===============================

local Skill_Charge = {}


function Skill_Charge.Execute(npc, target)
    local config = SkillConfig.Skills.Charge
    if not npc or not target then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ npc ‡∏´‡∏£‡∏∑‡∏≠ target")
        return false
    end


    -- üßç‚Äç‚ôÇÔ∏è ‡∏´‡∏≤ HumanoidRootPart ‡∏Ç‡∏≠‡∏á npc
    local root = npc.root or (npc.model and npc.model:FindFirstChild("HumanoidRootPart"))
    if not root then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö HumanoidRootPart ‡∏Ç‡∏≠‡∏á npc")
        return false
    end

    -- üéØ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á Model ‡πÅ‡∏•‡∏∞ Part ‡πÄ‡∏õ‡πá‡∏ô target
    local targetRoot
    if target:IsA("Model") then
        targetRoot = target:FindFirstChild("HumanoidRootPart") or target:FindFirstChild("Torso")
    elseif target:IsA("BasePart") then
        targetRoot = target
    end

    if not targetRoot then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á target:", target.Name)
        return false
    end

    print("‚ö°", npc.model.Name, "‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏• Charge ‡πÉ‡∏™‡πà", target.Name)

    -- üß≠ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏∏‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á target
   -- local direction = -targetRoot.CFrame.LookVector
   -- local distanceBehind = config.DistanceBehind or 25
   -- local pointPosition = targetRoot.Position + (direction * distanceBehind)

   -- üß≠ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å npc ‚Üí target ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏∏‡πà‡∏á‡∏ó‡∏∞‡∏•‡∏∏‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å
local direction = (targetRoot.Position - root.Position).Unit
local distanceBehind = config.DistanceBehind or 25
local pointPosition = targetRoot.Position + (direction * distanceBehind)



    -- üí† ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ (‡πÑ‡∏ß‡πâ‡∏î‡∏π)
    local pointPart = Instance.new("Part")
    pointPart.Name = "ChargePoint"
    pointPart.Size = Vector3.new(3, 3, 3)
    pointPart.Anchored = true
    pointPart.CanCollide = false
    pointPart.Color = Color3.fromRGB(0, 170, 255)
    pointPart.Material = Enum.Material.Neon
    pointPart.Position = pointPosition
    pointPart.Parent = workspace
    Debris:AddItem(pointPart, 4) -- ‡∏•‡∏ö‡πÉ‡∏ô 4 ‡∏ß‡∏¥

    print("üìç ‡∏à‡∏∏‡∏î Charge ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà:", pointPosition)

    -- üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏∏‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏à‡∏∏‡∏î‡∏ô‡∏±‡πâ‡∏ô (‡πÉ‡∏ä‡πâ Tween)
    local distance = (pointPosition - root.Position).Magnitude
    local speed = config.Speed or 80
    local duration = distance / speed

    local tweenInfo = TweenInfo.new(
        duration,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.Out
    )

    local tween = TweenService:Create(root, tweenInfo, {
        CFrame = CFrame.new(pointPosition, pointPosition + direction)
    })

    print("üöÄ", npc.model.Name, "‡∏û‡∏∏‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏à‡∏∏‡∏î Charge ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤", string.format("%.2f", duration), "‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

    npc.IsCharging = true

-- üö´ ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏û‡∏∏‡πà‡∏á
--for _, descendant in ipairs(npc.model:GetDescendants()) do
--	if descendant:IsA("BasePart") then
--		descendant.CanCollide = false
--	end
--end


-- üß† ‡∏ï‡∏±‡πâ‡∏á CollisionGroup ‡πÉ‡∏´‡πâ NPC ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô EnemyCharge
for _, part in ipairs(npc.model:GetDescendants()) do
	if part:IsA("BasePart") then
		PhysicsService:SetPartCollisionGroup(part, "EnemyCharge")
	end
end


    tween:Play()


    -- üå™Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏û‡∏∏‡πà‡∏á
-- üå™Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏û‡∏∏‡πà‡∏á
local connection
connection = root.Touched:Connect(function(hit)
	local character = hit.Parent
	local humanoid = character and character:FindFirstChildOfClass("Humanoid")
	local hrp = character and character:FindFirstChild("HumanoidRootPart")

	if humanoid and hrp and character ~= npc.model then
		print("üí•", npc.model.Name, "‡∏ä‡∏ô‡∏Å‡∏±‡∏ö", character.Name)


        
	--	local knockback = Instance.new("BodyVelocity")
	--	knockback.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	--	local knockbackStrength = math.clamp(distance * 2, 30, 80)
	--	knockback.Velocity = direction * knockbackStrength
	--	knockback.Parent = hrp
	--	game.Debris:AddItem(knockback, 0.2)

    local knockback = Instance.new("BodyVelocity")
    knockback.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    local knockbackStrength = math.clamp(distance * 2, 50, 100) -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏£‡∏á‡∏´‡∏ô‡πà‡∏≠‡∏¢
    knockback.Velocity = direction * knockbackStrength + Vector3.new(0,30,60) -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏£‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏ô
    knockback.P = 1e4 -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå
    knockback.Parent = hrp
    game.Debris:AddItem(knockback, 0.5) -- ‡πÉ‡∏´‡πâ‡πÅ‡∏£‡∏á‡∏ô‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô


        --‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏™‡∏±‡πà‡∏ô

            -- üîπ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ: ‡∏™‡πà‡∏á Character ‡πÅ‡∏ó‡∏ô Humanoid
           -- local targetCharacter = targetHumanoid.Parent
           -- EventBus:Emit("ShakeCamera", targetCharacter, 0.7, 0.5)


            EventBus:Emit("ShakeCamera", character, 0.45, 1.0)


            --EventBus:Emit("ShakeCamera", player.Character, 2, 1.0)


		--humanoid:TakeDamage(config.Damage or 15)
	end
end)


    tween.Completed:Wait(6)



print("‚è∏ NPC ‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏¥‡πà‡∏á 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")

--task.delay(5)
--task.wait(5)             -- ‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏¥‡πà‡∏á 5 ‡∏ß‡∏¥ ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠

-- ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï CollisionGroup ‡∏Å‡πà‡∏≠‡∏ô
for _, part in ipairs(npc.model:GetDescendants()) do
	if part:IsA("BasePart") then
		PhysicsService:SetPartCollisionGroup(part, "Default")
	end
end

if connection then connection:Disconnect() end

-- ‚úÖ ‡∏£‡∏≠‡πÉ‡∏´‡πâ NPC ‡∏û‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏Å‡∏•‡∏±‡∏ö
task.delay(0.5, function()
	for _, descendant in ipairs(npc.model:GetDescendants()) do
		if descendant:IsA("BasePart") then
			descendant.CanCollide = true
		end
	end
end)





-- üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏∏‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
--if connection then
--	connection:Disconnect()
--end

    npc.IsCharging = false



    
    print("‚úÖ", npc.model.Name, "‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î Charge ‡πÅ‡∏•‡πâ‡∏ß")


    return true


    
end

return Skill_Charge
