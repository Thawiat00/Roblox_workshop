-- ========================================
-- üìÑ ServerScriptService/NPCAI/InitAI.lua
-- ========================================
local ReplicatedStorage = game:GetService("ReplicatedStorage")


local NPCAIController = require(game.ServerScriptService.ServerLocal.NPCAI.NPCAIController)
local EventBus = require(game.ServerScriptService.ServerLocal.Core.EventBus)

--local ReplicatedStorage = game:GetService("ReplicatedStorage")

--local EventBus = require(ReplicatedStorage:WaitForChild("Core"):WaitForChild("EventBus"))

local RE_OnWoodThrown = ReplicatedStorage:WaitForChild("Common"):WaitForChild("RE_OnWoodThrown")


local enemyFolder = workspace:WaitForChild("puppet_enemy")

print("ü§ñ Initializing NPC AI System...")


-- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏Å‡πá‡∏ö stateMachine ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ NPC
local npcStateMachines = {}

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á AI ‡πÉ‡∏´‡πâ NPC ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
for _, model in pairs(enemyFolder:GetChildren()) do
    if model:IsA("Model") and model:FindFirstChild("Humanoid") then
        local npc, stateMachine = NPCAIController.Create(model)


		npcStateMachines[npc] = stateMachine
		NPCAIController.Update(npc, stateMachine)

      --  NPCAIController.Update(npc, stateMachine)
    end
end




-- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ NPC ‡πÉ‡∏´‡∏°‡πà
enemyFolder.ChildAdded:Connect(function(child)
    task.wait(0.5)
    if child:IsA("Model") and child:FindFirstChild("Humanoid") then
        local npc, stateMachine = NPCAIController.Create(child)

		npcStateMachines[npc] = stateMachine

        NPCAIController.Update(npc, stateMachine)
    end
end)


-- ========================================
-- üî• ‡∏£‡∏±‡∏ö RemoteEvent ‡∏à‡∏≤‡∏Å Client
-- ========================================
RE_OnWoodThrown.OnServerEvent:Connect(function(player, woodName, clientVelocity)
	print("[Server] üì• ‡∏£‡∏±‡∏ö RE_OnWoodThrown ‡∏à‡∏≤‡∏Å:", player.Name, "‡πÑ‡∏°‡πâ:", woodName)
	
	local woodPart = workspace:WaitForChild("wood"):FindFirstChild(woodName)
	if not woodPart then
		warn("[Server] ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÑ‡∏°‡πâ‡∏ä‡∏∑‡πà‡∏≠:", woodName)
		return
	end
	
	-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ player ‡∏ñ‡∏∑‡∏≠‡πÑ‡∏°‡πâ‡∏ä‡∏¥‡πâ‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á (‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö HeldBy)
	-- if woodPart:GetAttribute("HeldBy") ~= player.UserId then
	-- 	warn("[Server] ‚ö†Ô∏è Player ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏∑‡∏≠‡πÑ‡∏°‡πâ‡∏ô‡∏µ‡πâ")
	-- 	return
	-- end
	
	-- ‡πÉ‡∏ä‡πâ velocity ‡∏à‡∏≤‡∏Å client (‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å LookVector ‡πÅ‡∏•‡πâ‡∏ß)
	local velocity = clientVelocity
	
	print("[Server] ‚ö° ‡πÉ‡∏ä‡πâ Velocity ‡∏à‡∏≤‡∏Å Client:", velocity)
	
	-- ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ physics ‡∏Ç‡∏≠‡∏á‡πÑ‡∏°‡πâ
	woodPart.Anchored = false
	woodPart.CanCollide = true
	woodPart.AssemblyLinearVelocity = velocity
	
	-- üî• Emit ‡∏ú‡πà‡∏≤‡∏ô EventBus ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö NPC
	print("[Server] üì¢ Emit EventBus: OnWoodThrown")
	EventBus:Emit("OnWoodThrown", player, woodPart, velocity)
end)


-- ========================================
-- üéØ ‡∏ü‡∏±‡∏á EventBus ‚Üí Trigger state Hit ‡∏Ç‡∏≠‡∏á NPC
-- ========================================
EventBus:On("OnWoodThrown", function(player, wood, woodVelocity)
    print("[Server] üîî EventBus.OnWoodThrown ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å! ‡πÑ‡∏°‡πâ:", wood.Name)
    print("[Server] üë§ Player:", player.Name)
    
    local npcList = NPCAIController.GetAllNPCs()
    print("[Server] üîç ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô NPC ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:", #npcList)
    
    for i, npc in ipairs(npcList) do
        local npcPos = npc.model.PrimaryPart.Position
        local woodPos = wood.Position  -- ‚úÖ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ wood ‡∏Ñ‡∏∑‡∏≠ Part ‡πÅ‡∏•‡πâ‡∏ß
        local distance = (npcPos - woodPos).Magnitude
        
        print("[Server] üìè NPC #" .. i .. " (" .. npc.model.Name .. ") - Distance:", 
              string.format("%.2f", distance), "studs")
        
        if distance < 10 then
            print("[Server] üí• NPC ‡πÇ‡∏î‡∏ô‡πÑ‡∏°‡πâ! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô State Hit")
            
            local hitData = {
                Type = "ThrownObject",
                Direction = woodVelocity.Unit,
                Wood = wood,
                Velocity = woodVelocity,
            }
            
           -- npc.stateMachine:Change("Hit", hitData)
            -- ‚≠ê‚≠ê‚≠ê ‡πÉ‡∏ä‡πâ Change_extra ‡πÅ‡∏ó‡∏ô Change ‚≠ê‚≠ê‚≠ê
            npc.stateMachine:Change_extra("Hit", hitData)


        end
    end
end)


---

--‡∏•‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÅ‡∏•‡πâ‡∏ß run ‡πÉ‡∏´‡∏°‡πà‡∏î‡∏π‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô log:

--‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å KnockbackNPC!
--üí® Knocked back: R15 Dummy with power 50




-- ‡∏ü‡∏±‡∏á Events
EventBus:On("NPCSpawned", function(npcName)
    print("üü¢ NPC Spawned:", npcName)
end)


-- ========================================
-- üéØ ‡∏£‡∏±‡∏ö Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠ NPC ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥
-- ========================================
EventBus.On("OnNPCAttack", function(npc, target, damage)
    print("‚öîÔ∏è", npc.model.Name, "attacked", target.Name, "for", damage, "damage")
end)

-- ========================================
-- üí• ‡∏£‡∏±‡∏ö Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠ NPC ‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•
-- ========================================
EventBus.On("OnNPCUseSkill", function(npc, target)
    print("üí•", npc.model.Name, "is using skill on", target.Name)
    
    -- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
    -- ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
    -- local animator = npc.humanoid:FindFirstChild("Animator")
    -- if animator then
    --     local track = animator:LoadAnimation(npc.skillAnimation)
    --     track:Play()
    -- end
    
    -- ‡πÅ‡∏™‡∏î‡∏á Effect ‡∏û‡∏¥‡πÄ‡∏®‡∏©
    -- local skillEffect = game.ReplicatedStorage.Effects.SkillEffect:Clone()
    -- skillEffect.Parent = npc.model
end)


EventBus:On("NPCAttacked", function(data)
    print("‚öîÔ∏è", data.npc, "attacked", data.target, "for", data.damage, "damage")
end)





-- üîπ ‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡∏ï‡∏±‡∏ô
EventBus:On("PlayerStunned", function(data)
	print("‚ö° Player stunned event received!")
	print("üßä Target:", data.target)
	print("‚è± Duration:", data.duration, "seconds")
end)

EventBus:On("NPCDied", function(npcName)
	print("üíÄ NPC Died:", npcName)
	
	-- ‡∏•‡∏ö stateMachine ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
	for npc, _ in pairs(npcStateMachines) do
		if npc.model.Name == npcName then
			npcStateMachines[npc] = nil
			break
		end
	end
end)




EventBus:On("PlayerDamaged", function(data)
    print("‚ù§Ô∏è Player HP:", data.currentHP)
end)

EventBus:On("PlayerDied", function(playerName)
    print("üíÄ Player Died:", playerName)
end)

-- ‚úÖ ‡∏ü‡∏±‡∏á Event ‡πÉ‡∏´‡∏°‡πà
EventBus:On("NPCUsedSkill", function(data)
    print("‚ú®", data.npc, "used", data.skill, "on", data.target)
end)

EventBus:On("PlayerHitBySkill", function(data)
    print("üí•", data.target, "hit by", data.skill, "for", data.damage, "damage")
end)

EventBus:On("PlayerStunned", function(data)
    print("‚ö°", data.target, "stunned for", data.duration, "seconds")
end)

-- üß© ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏ô‡∏à‡∏≤‡∏Å EventBus (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô debug ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô client)
--EventBus:On("ShakeCamera", function(intensity, duration)
--	print("[CameraShakeClient] üîî EventBus Trigger Received intensity : ",intensity,"duration",duration)
	--ShakeCamera(intensity, duration)
--end)




print("‚úÖ NPC AI System Ready")

