-- ==========================================
-- Presentation/Controllers/Handlers/ImpactHandler.lua
-- ==========================================
-- ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ä‡∏ô Player (Impact & Knockback System)
-- ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏° Impact Logic ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
-- ==========================================

local ImpactHelper = require(game.ServerScriptService.ServerLocal.Infrastructure.utility.ImpactHelper)
local SimpleAIConfig = require(game.ServerScriptService.ServerLocal.Infrastructure.Data.SimpleAIConfig)

local ImpactHandler = {}
ImpactHandler.__index = ImpactHandler

-- ==========================================
-- Constructor
-- ==========================================
function ImpactHandler.new(controller)
    local self = setmetatable({}, ImpactHandler)
    
    self.Controller = controller
    self.EnemyData = controller.EnemyData
    self.RootPart = controller.RootPart
    
    self.ImpactForceMagnitude = controller.ImpactForceMagnitude
    self.ImpactDuration = controller.ImpactDuration
    self.ImpactDamage = controller.ImpactDamage
    self.ImpactVisualEffect = controller.ImpactVisualEffect
    
    -- ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Player ‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ä‡∏ô‡∏ã‡πâ‡∏≥)
    self.ImpactedPlayers = {}
    
    -- Setup Touch Connection
    self.TouchConnection = nil
    
    return self
end

-- ==========================================
-- ‚ú® Setup Impact Detection (Touched Event)
-- ==========================================
function ImpactHandler:SetupImpactDetection()
    -- ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Touched event ‡∏Å‡∏±‡∏ö RootPart
    self.TouchConnection = self.RootPart.Touched:Connect(function(hit)
        self:OnTouched(hit)
    end)
    
    print("[ImpactHandler] ‚úÖ Impact detection setup complete")
end

-- ==========================================
-- ‚ú® Callback: ‡πÄ‡∏°‡∏∑‡πà‡∏≠ RootPart ‡∏ä‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á
-- ==========================================
function ImpactHandler:OnTouched(hit)
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á Dash ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if not self.Controller.DashService:IsDashing() then
        return
    end
    
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Player ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    local isPlayer, player = ImpactHelper.IsPlayerCharacter(hit)
    if not isPlayer then
        return
    end
    
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏ä‡∏ô Player ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if self:HasImpactedPlayer(player) then
        return -- ‡πÄ‡∏Ñ‡∏¢‡∏ä‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏ô‡∏ã‡πâ‡∏≥
    end
    
    -- ‡∏î‡∏∂‡∏á HumanoidRootPart ‡∏Ç‡∏≠‡∏á Player
    local playerRoot = ImpactHelper.GetPlayerRootPart(hit.Parent)
    if not playerRoot then
        return
    end
    
    -- ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Impact Callback
    self.Controller.DashService:OnDashHit(hit.Parent, function(target, player, playerRoot)
        return self:HandlePlayerImpact(target, player, playerRoot)
    end)
end

-- ==========================================
-- ‚ú® ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡πÅ‡∏ó‡∏Å Player
-- ==========================================
function ImpactHandler:HandlePlayerImpact(target, player, playerRoot)
    if not playerRoot or not self.RootPart then
        warn("[ImpactHandler] Cannot handle impact: missing root parts")
        return false
    end
    
    -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏£‡∏á‡∏Å‡∏£‡∏∞‡πÅ‡∏ó‡∏Å
    local forceVector = ImpactHelper.CalculateImpactForce(
        self.RootPart,
        playerRoot,
        self.ImpactForceMagnitude
    )
    
    if not forceVector then
        warn("[ImpactHandler] Failed to calculate impact force")
        return false
    end
    
    -- ‚úÖ Apply VectorForce ‡πÉ‡∏´‡πâ Player
    local success = ImpactHelper.ApplyImpactForce(
        playerRoot,
        forceVector,
        self.ImpactDuration,
        SimpleAIConfig.ImpactGravityCompensation
    )
    
    if success then
        print("[ImpactHandler] üí• Impact applied to:", player.Name)
        
        -- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏ä‡∏ô Player ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß
        self:RecordImpact(player)
        
        -- ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Visual Effect (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ)
        if self.ImpactVisualEffect then
            ImpactHelper.CreateImpactEffect(playerRoot.Position)
        end
        
        -- ‚úÖ Apply Damage (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        if self.ImpactDamage and self.ImpactDamage > 0 then
            self:ApplyDamage(target, self.ImpactDamage)
        end
        
        return true
    else
        warn("[ImpactHandler] Failed to apply impact force")
        return false
    end
end

-- ==========================================
-- ‚ú® Apply Damage ‡πÉ‡∏´‡πâ Player
-- ==========================================
function ImpactHandler:ApplyDamage(target, damage)
    local humanoid = target:FindFirstChild("Humanoid")
    if humanoid then
        humanoid:TakeDamage(damage)
        print("[ImpactHandler] ‚öîÔ∏è Applied", damage, "damage to:", target.Name)
    end
end

-- ==========================================
-- ‚ú® ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏ä‡∏ô Player ‡πÅ‡∏•‡πâ‡∏ß
-- ==========================================
function ImpactHandler:RecordImpact(player)
    self.ImpactedPlayers[player] = true
end

-- ==========================================
-- ‚ú® ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏ä‡∏ô Player ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
-- ==========================================
function ImpactHandler:HasImpactedPlayer(player)
    return self.ImpactedPlayers[player] == true
end

-- ==========================================
-- ‚ú® ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Player ‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡πÅ‡∏•‡πâ‡∏ß
-- ==========================================
function ImpactHandler:ClearImpactRecords()
    self.ImpactedPlayers = {}
    print("[ImpactHandler] üßπ Impact records cleared")
end

-- ==========================================
-- ‚ú® ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Player ‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡πÅ‡∏•‡πâ‡∏ß
-- ==========================================
function ImpactHandler:GetImpactCount()
    local count = 0
    for _ in pairs(self.ImpactedPlayers) do
        count = count + 1
    end
    return count
end

-- ==========================================
-- ‚ú® Cleanup
-- ==========================================
function ImpactHandler:Destroy()
    if self.TouchConnection then
        self.TouchConnection:Disconnect()
        self.TouchConnection = nil
        print("[ImpactHandler] Touch connection disconnected")
    end
    
    self:ClearImpactRecords()
end

return ImpactHandler