-- ==========================================
-- Bootstrap/InitializeAI_Phase2.lua (Script)
-- ==========================================
-- ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö AI Phase 2 (Chase + Detect)
-- ‡∏ß‡∏≤‡∏á Script ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô ServerScriptService
-- ==========================================

print("===========================================")
print("[Phase 2] üéÆ Starting AI Chase System")
print("===========================================")

-- ==========================================
-- ‡πÇ‡∏´‡∏•‡∏î Controller (Phase 2 Version)
-- ==========================================
local SimpleWalkController = require(game.ServerScriptService.ServerLocal.Presentation.Controllers.SimpleWalkController)

-- ==========================================
-- ‡πÇ‡∏´‡∏•‡∏î Repository (Singleton)
-- ==========================================
local SimpleEnemyRepository = require(game.ServerScriptService.ServerLocal.Infrastructure.Repositories.SimpleEnemyRepository)
local repo = SimpleEnemyRepository.GetInstance()

-- ==========================================
-- ‡πÇ‡∏´‡∏•‡∏î Config
-- ==========================================
local SimpleAIConfig = require(game.ServerScriptService.ServerLocal.Infrastructure.Data.SimpleAIConfig)

-- ==========================================
-- ‡∏´‡∏≤ Enemies Folder ‡πÉ‡∏ô Workspace
-- ==========================================
local enemiesFolder = workspace:FindFirstChild("Enemies")

if not enemiesFolder then
    warn("[Phase 2] ‚ùå No 'Enemies' folder found in workspace!")
    warn("[Phase 2] üí° Please create a folder named 'Enemies' and add enemy models")
    warn("[Phase 2] üìù Enemy models must have: Humanoid + HumanoidRootPart")
    return
end

-- ==========================================
-- ‡πÅ‡∏™‡∏î‡∏á Config ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
-- ==========================================
print("[Phase 2] üìã AI Configuration:")
print("  ‚Ä¢ Walk Speed:", SimpleAIConfig.WalkSpeed)
print("  ‚Ä¢ Run Speed:", SimpleAIConfig.RunSpeed)
print("  ‚Ä¢ Detection Range:", SimpleAIConfig.DetectionRange, "studs")
print("  ‚Ä¢ Detection Interval:", SimpleAIConfig.DetectionCheckInterval, "seconds")
print("  ‚Ä¢ Chase Update:", SimpleAIConfig.ChaseUpdateInterval, "seconds")
print("===========================================")

-- ==========================================
-- ‡πÄ‡∏£‡∏¥‡πà‡∏° AI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÉ‡∏ô Folder
-- ==========================================
local activeControllers = {}
local successCount = 0
local failCount = 0

for _, enemyModel in ipairs(enemiesFolder:GetChildren()) do
    if enemyModel:IsA("Model") and enemyModel:FindFirstChild("Humanoid") then
        
        local success, controllerOrError = pcall(function()
            -- ‡∏™‡∏£‡πâ‡∏≤‡∏á enemy data ‡∏ú‡πà‡∏≤‡∏ô repository
            print("[Phase 2] üîÑ Creating enemy data for:", enemyModel.Name)
            local enemyData = repo:CreateSimpleEnemy(enemyModel)
            assert(enemyData, "[Phase 2] ‚ùå Failed to create enemyData for: "..enemyModel.Name)

            -- ‡∏™‡∏£‡πâ‡∏≤‡∏á Controller (Phase 2 ‡∏£‡∏ß‡∏° Chase logic)
            print("[Phase 2] ü§ñ Creating controller for:", enemyModel.Name)
            local controller = SimpleWalkController.new(enemyModel)
            assert(controller, "[Phase 2] ‚ùå Failed to create controller for: "..enemyModel.Name)

            return controller
        end)
        
        if success then
            table.insert(activeControllers, controllerOrError)
            successCount = successCount + 1
            print("[Phase 2] ‚úÖ", enemyModel.Name, "- AI Started (Walk + Chase)")
        else
            failCount = failCount + 1
            warn("[Phase 2] ‚ùå", enemyModel.Name, "- Failed:", controllerOrError)
        end
    else
        warn("[Phase 2] ‚ö†Ô∏è", enemyModel.Name, "- Invalid model (no Humanoid)")
    end
end

-- ==========================================
-- ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
-- ==========================================
print("===========================================")
print("[Phase 2] üìä Summary:")
print("[Phase 2] ‚úÖ Active AIs:", successCount)
if failCount > 0 then
    warn("[Phase 2] ‚ùå Failed:", failCount)
end
print("[Phase 2] üéØ System Ready!")
print("[Phase 2] üîç Enemies will detect players within", SimpleAIConfig.DetectionRange, "studs")
print("[Phase 2] üèÉ Enemies will chase at speed", SimpleAIConfig.RunSpeed)
print("===========================================")

-- ==========================================
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Global API (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Debug/‡∏ó‡∏î‡∏™‡∏≠‡∏ö)
-- ==========================================
_G.Phase2 = {
    -- ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô AI ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    GetActiveCount = function()
        return #activeControllers
    end,
    
    -- ‡∏î‡∏∂‡∏á Controllers ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    GetControllers = function()
        return activeControllers
    end,
    
    -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï AI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    ResetAll = function()
        for _, controller in ipairs(activeControllers) do
            controller:Reset()
        end
        print("[Phase 2] All AIs reset")
    end,
    
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ AI ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
    DebugFirstEnemy = function()
        if #activeControllers > 0 then
            local controller = activeControllers[1]
            print("===========================================")
            print("[Debug] Enemy:", controller.Model.Name)
            print("[Debug] State:", controller.EnemyData.CurrentState)
            print("[Debug] Speed:", controller.EnemyData.CurrentSpeed)
            print("[Debug] Is Chasing:", controller.IsChasing)
            print("[Debug] Has Target:", controller.EnemyData:HasTarget())
            if controller.EnemyData:HasTarget() then
                print("[Debug] Target:", controller.EnemyData.CurrentTarget.Parent.Name)
            end
            print("[Debug] Detection State:", controller.EnemyData.DetectionState)
            print("===========================================")
        else
            warn("[Debug] No active enemies")
        end
    end,
    
    -- ‡∏´‡∏¢‡∏∏‡∏î Chase ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
    StopAllChase = function()
        for _, controller in ipairs(activeControllers) do
            controller:StopChasing()
        end
        print("[Phase 2] All chase behaviors stopped")
    end,
    
    -- ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß
    ShowAllStatus = function()
        print("===========================================")
        print("[Phase 2] All Enemies Status:")
        for i, controller in ipairs(activeControllers) do
            print(string.format(
                "%d. %s | State: %s | Speed: %.1f | Chasing: %s",
                i,
                controller.Model.Name,
                controller.EnemyData.CurrentState,
                controller.EnemyData.CurrentSpeed,
                tostring(controller.IsChasing)
            ))
        end
        print("===========================================")
    end,
    
    -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Detection Range ‡πÅ‡∏ö‡∏ö runtime
    SetDetectionRange = function(newRange)
        for _, controller in ipairs(activeControllers) do
            controller.DetectionRange = newRange
        end
        print("[Phase 2] Detection range changed to:", newRange)
    end,
    
    -- ‡πÅ‡∏™‡∏î‡∏á Config
    ShowConfig = function()
        print("===========================================")
        print("[Phase 2] Current Configuration:")
        print("  ‚Ä¢ Walk Speed:", SimpleAIConfig.WalkSpeed)
        print("  ‚Ä¢ Run Speed:", SimpleAIConfig.RunSpeed)
        print("  ‚Ä¢ Detection Range:", SimpleAIConfig.DetectionRange)
        print("  ‚Ä¢ Detection Interval:", SimpleAIConfig.DetectionCheckInterval)
        print("  ‚Ä¢ Chase Update:", SimpleAIConfig.ChaseUpdateInterval)
        print("  ‚Ä¢ Wander Radius:", SimpleAIConfig.WanderRadius)
        print("  ‚Ä¢ Walk Duration:", SimpleAIConfig.WalkDuration)
        print("  ‚Ä¢ Idle Duration:", SimpleAIConfig.IdleDuration)
        print("===========================================")
    end
}

-- ==========================================
-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
-- ==========================================
print("\n[Phase 2] üí° Debug Commands:")
print("  _G.Phase2.GetActiveCount()      -- ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô AI")
print("  _G.Phase2.DebugFirstEnemy()     -- ‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ AI ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å")
print("  _G.Phase2.ShowAllStatus()       -- ‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß")
print("  _G.Phase2.ResetAll()            -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï AI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
print("  _G.Phase2.StopAllChase()        -- ‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏•‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
print("  _G.Phase2.SetDetectionRange(500) -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö")
print("  _G.Phase2.ShowConfig()          -- ‡πÅ‡∏™‡∏î‡∏á Config\n")

-- ==========================================
-- ‡πÄ‡∏ù‡πâ‡∏≤‡∏î‡∏π Player ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏° (Optional)
-- ==========================================
game.Players.PlayerAdded:Connect(function(player)
    print("[Phase 2] üë§ Player joined:", player.Name, "- AIs will detect them!")
end)

game.Players.PlayerRemoving:Connect(function(player)
    print("[Phase 2] üëã Player left:", player.Name)
end)